# Shadowrocket: 2024-08-10 22:28:46
#从这里开始复制 包括开头这个#井号
;hayeslin
;Mr.HayesLin
;Mr.HayesLin
;07.31.2024 更新   

[General]
# 旁路系统：如果禁用此选项，可能会导致一些系统问题，如推送通知延迟。
bypass-system = true
# 跳过代理：此选项强制这些域名或IP的连接范围由Shadowrocket TUN接口来处理，而不是Shadowrocket代理服务器。此选项用于解决一些应用程序的一些兼容性问题。
skip-proxy = localhost,local,*.local,127.0.0.1,192.168.0.0/16,172.16.0.0/12,224.0.0.0/24,10.0.0.0/8
# TUN旁路路由：Shadowrocket TUN接口只能处理TCP协议。使用此选项可以绕过指定的IP范围，让其他协议通过。
tun-excluded-routes = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32,239.255.255.250/32
# DNS覆写。使用此选项覆盖默认的DNS服务器。有些dns over https支持http3，所以尝试查询，如果支持就切换到http3。可在doh链接后面加上#no-h3关闭。
dns-server = https://doh.pub/dns-query,https://dns.alidns.com/dns-query,119.29.29.29,223.5.5.5,114.114.114.114
# 备用DNS。当覆写的DNS解析失败后回退使用指定DNS，如需指定多个DNS，可用逗号分隔。system表示回退到系统DNS。
fallback-dns-server = system
# 启用IPv6支持。false表示不启用，true表示启用。
ipv6 = true
# 首选IPv6。优先向IPv6的DNS服务器查询AAAA记录。false表示不启用。
prefer-ipv6 = false
# 域名直接使用系统DNS进行解析。false表示不启用。
dns-direct-system = false
# ping数据包自动回复。
icmp-auto-reply = true
# 不开启时，REJECT策略默认只有在配置模式下生效。开启后，可以令该策略在其他全局路由模式下都生效。
always-reject-url-rewrite = false
# 私有IP应答。如果关闭该选项，域名解析返回私有IP，Shadowrocket会认为该域名被劫持而强制使用代理。
private-ip-answer = false
# 直连的域名解析失败后使用代理。
dns-direct-fallback-proxy = true
# 当UDP流量匹配到规则里不支持UDP转发的节点策略时重新选择回退行为，可选行为包括DIRECT、REJECT。DIRECT表示直连转发UDP流量，REJECT表示屏蔽UDP流量。
udp-policy-not-supported-behaviour = REJECT
update-url = https://raw.githubusercontent.com/hayeslin1/adblock_rule_hayes/main/Shadowrocket/hayes_SR_rule.conf
# force-http-engine-hosts = boxjs.com,boxjs.net,*.boxjs.com,*.boxjs.net,*.ott.cibntv.net,intl.iqiyi.com,maicai.api.ddxq.mobi,mobileapi-v6.elong.com,weibointl.api.weibo.cn,wmapi.meituan.com

[Proxy]
# 添加本地节点。
# Shadowsocks类型：
# 节点名称=ss,地址,端口,password=密码,其他参数(如method=aes-256-cfb,obfs=websocket,plugin=none)
# Vmess类型：
# 节点名称=vmess,地址,端口,password=密码,其他参数(如alterId=0,method=auto,obfs=websocket,tfo=1)
# VLESS类型：
# 节点名称=vless,地址,端口,password=密码,tls=true,其他参数(如obfs=websocket,peer=example.com)
# HTTP/HTTPS/Socks5/Socks5 Over TLS等类型：
# 节点名称=http,地址,端口,用户,密码
# 节点名称=https,地址,端口,用户,密码
# 节点名称=socks5,地址,端口,用户,密码
# 节点名称=socks5-tls,地址,端口,用户,密码,skip-common-name-verify=true
# Trojan类型：
# 节点名称=trojan,地址,端口,password=密码,其他参数(如allowInsecure=1,peer=example.com)

[Proxy Group]
# 代理分组类型：
# select，手动选择节点。
# url-test，自动选择延迟最低节点。
# fallback，节点挂掉时自动切换其他可用节点。
# load-balance，不同请求依次使用分组里的不同节点进行连接。
# random，所有请求使用分组里随机指定的一个节点进行连接。
# ----------
# policy-regex-filter表示通过正则式筛选节点，常用写法：
# 筛选保留节点名称含有关键词A和B的节点，
# (?=.*(A))^(?=.*(B))^.*$
# 筛选保留节点名称含有关键词A或B的节点，
# A|B
# 筛选排除节点名称含有关键词A或B的节点，
# ^((?!(A|B)).)*$
# 筛选保留节点名称含有关键词A并排除含有关键词B的节点，
# (?=.*(A).)^((?!(B)).)*$
# ----------
# 代理分组其他设置参数：
# interval，指定间隔多长时间后需要重新发起测试。
# timeout，如果测试在超时前未完成，放弃测试。
# tolerance，只有当新优胜者的分数高于旧优胜者的分数加上公差时，才会进行线路更换。
# url，指定要测试的URL。

# 自动选择
自动切换 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=10,timeout=5,select=0,policy-regex-filter=^*$
日本节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=10,timeout=5,select=0,policy-regex-filter=^(?=.*( 🇯🇵|日|川日|东京|大阪|泉日|埼玉|JP|Japan)).*$
香港节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=10,timeout=5,select=0,policy-regex-filter=^(?=.*(🇭🇰|港|虚通|HK|Hong)).*$
台湾节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=10,timeout=5,select=0,policy-regex-filter=^(?=.*(台|台湾|TW|Tai)).*$
新加坡节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=10,timeout=5,select=0,policy-regex-filter=^(?=.*(🇸🇬|新加坡|狮|(?i)SG|Singapore)).*$
美国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=10,timeout=5,select=0,policy-regex-filter=^(?=.*(🇺🇸|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(?i)US|United States)).*$
流媒体节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=10,timeout=5,select=0,policy-regex-filter=^(?=.*(NF|奈飞|解锁|Netflix|NETFLIX|Media)).*$
# 手动选择
OutSide =  select,自动切换,日本节点,香港节点,台湾节点,新加坡节点,美国节点,流媒体节点,interval=600,timeout=5,select=0,url=http://www.gstatic.com/generate_204
Switch =  select,OutSide,DIRECT,REJECT,interval=600,timeout=5,select=0,url=http://www.gstatic.com/generate_204
Domestic =  select,DIRECT,REJECT,OutSide,interval=600,timeout=5,select=0,url=http://www.gstatic.com/generate_204
Advertising =  select,REJECT,DIRECT,OutSide,interval=600,timeout=5,select=0,url=http://www.gstatic.com/generate_204
Final =  select,OutSide,DIRECT,REJECT,interval=600,timeout=5,select=0,url=http://www.gstatic.com/generate_204




[Rule]
# 关于屏蔽443端口的UDP流量的解释内容：HTTP3/QUIC协议开始流行，但是国内ISP和国际出口的UDP优先级都很低，表现很差，屏蔽掉以强制回退HTTP2/HTTP1.1。（如需启用该逻辑规则，请删除AND前面的注释符号#）
# AND,((PROTOCOL,UDP),(DEST-PORT,443)),REJECT-NO-DROP
# ----------
# 这两个AND的逻辑规则是防止出现因Spotify或YouTube相关请求走了UDP时可能导致模块脚本失效的问题。
AND,((PROTOCOL,UDP),(DEST-PORT,443),(DOMAIN,spclient.wg.spotify.com)),REJECT-NO-DROP
AND,((PROTOCOL,UDP),(DEST-PORT,443),(DOMAIN-SUFFIX,googlevideo.com)),REJECT-NO-DROP
# 分流规则
RULE-SET,https://raw.githubusercontent.com/hayeslin1/adblock_rule_hayes/main/QuantumultX/expand/HayesRule.list,Domestic
RULE-SET,https://raw.githubusercontent.com/hayeslin1/adblock_rule_hayes/main/Shadowrocket/expand/Spotify.list,日本节点
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OpenAI/OpenAI.list,美国节点
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GitHub/GitHub.list,OutSide
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Stackexchange/Stackexchange.list,OutSide
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Telegram/Telegram.list,OutSide
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Facebook/Facebook.list,OutSide
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Twitter/Twitter.list,OutSide
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Notion/Notion.list,OutSide
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Instagram/Instagram.list,OutSide
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/YouTube/YouTube.list,OutSide
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Google/Google.list,OutSide
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Microsoft/Microsoft.list,Domestic
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple.list,Domestic
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/China/China.list,Domestic
# CN地区的IP分流走直连，GEOIP数据库用来判断IP是否属于CN地区。
GEOIP,CN,🎯全球直连
# 表示当上面所有规则都匹配不到时才使用FINAL规则的策略。
FINAL,🐟漏网之鱼

[Host]
localhost = 127.0.0.1

[URL Rewrite]
#spotify解锁 https://whatshub.top/module/spotifyVIP.module
#YouTube去广告 https://whatshub.top/module/YouTubeAd.sgmodule
#彩云天气SVIP https://whatshub.top/module/caiyun.module
#Emby解锁 https://whatshub.top/module/emby.sgmodule




^https?://(www.)?(g|google)\.(cn|com) https://www.google.com.hk 302
#Q-Search
# - Safari 内输入 命令 + 空格 + 关键词 快速指定搜索引擎搜索
#注：先进入设置更改 Safari 默认搜索为 DuckDuckGO
#可自行修改指令或者添加搜索引擎

# ＞搜索
# gm   (Google图片)
^https:\/\/duckduckgo.com\/\?q=gm\+([^&]+).+ https://www.google.com/search?&tbm=isch&q=$1 302
# gh   (GitHub)
^https:\/\/duckduckgo.com\/\?q=gh\+([^&]+).+ https://github.com/search?q=$1 302
# sof  (Stack Overflow)
^https:\/\/duckduckgo.com\/\?q=sof\+([^&]+).+ https://stackoverflow.com/search?q=$1 302
# se  (StackExchange)
^https:\/\/duckduckgo.com\/\?q=se\+([^&]+).+ https://stackexchange.com/search?q=$1 302
# wa  (WolframAlpha)
^https:\/\/duckduckgo.com\/\?q=wa\+([^&]+).+ https://www.wolframalpha.com/input/?i=$1 302
# wiki  (维基百科)
^https:\/\/duckduckgo.com\/\?q=wiki(\+|%20)([^&]+).+ http://wikipedia.org/wiki/$2 302
# wk  (维基中文)
^https:\/\/duckduckgo.com\/\?q=wk(\+|%20)([^&]+).+ https://zh.wikipedia.org/wiki/$2 302
# mg  (Magi)
^https:\/\/duckduckgo.com\/\?q=mg(\+|%20)([^&]+).+ https://magi.com/search?q=$2 302
# tf  (Google 搜索 TestFlight)
^https:\/\/duckduckgo.com\/\?q=tf(\+|%20)([^&]+).+ https://www.google.com/search?as_q=$2&as_sitesearch=testflight.apple.com 302

# > 翻译
# yd   (有道)
^https:\/\/duckduckgo.com\/\?q=yd\+([^&]+).+ http://dict.youdao.com/search?q=$1 302
# trc  (Google 译至中)
^https:\/\/duckduckgo.com\/\?q=trc\+([^&]+).+ https://translate.google.com/#view=home&op=translate&sl=auto&tl=zh-CN&text=$1 302
# tre  (Google 译至英)
^https:\/\/duckduckgo.com\/\?q=tre\+([^&]+).+ https://translate.google.com/#view=home&op=translate&sl=auto&tl=en&text=$1 302
# trj  (Google 译至日)
^https:\/\/duckduckgo.com\/\?q=trj\+([^&]+).+ https://translate.google.com/#view=home&op=translate&sl=auto&tl=ja&text=$1 302

# ＞社区
# db：豆瓣
^https:\/\/duckduckgo.com\/\?q=db\+([^&]+).+ https://m.douban.com/search/?query=$1 302
# zh: 知乎
^https:\/\/duckduckgo.com\/\?q=zh\+([^&]+).+ https://www.zhihu.com/search?type=content&q=$1 302
# wb: 微博
^https:\/\/duckduckgo.com\/\?q=wb\+([^&]+).+ https://s.weibo.com/weibo/$1 302
# wx: 微信
^https:\/\/duckduckgo.com\/\?q=wx\+([^&]+).+ https://weixin.sogou.com/weixinwap?query=$1 302
# rd  (Reddit)
^https:\/\/duckduckgo.com\/\?q=rd\+([^&]+).+ https://www.reddit.com/search?q=$1 302
# tw (Twitter)
^https:\/\/duckduckgo.com\/\?q=tw\+([^&]+).+ https://twitter.com/search?q=$1 302
# ssp: 少数派
^https:\/\/duckduckgo.com\/\?q=ssp\+([^&]+).+ https://sspai.com/search/post/$1 302
# csdn: CSDN
^https:\/\/duckduckgo.com\/\?q=csdn\+([^&]+).+ https://so.csdn.net/so/search/s.do?q=$1&t=&u= 302

# > 购物
# zdm: 什么值得买
^https:\/\/duckduckgo.com\/\?q=zdm\+([^&]+).+ https://search.m.smzdm.com/?v=b&s=$1 302
# amz: 亚马逊
^https:\/\/duckduckgo.com\/\?q=amz\+([^&]+).+ https://www.amazon.cn/gp/aw/s/?k=$1 302
# jd : 京东
^https:\/\/duckduckgo.com\/\?q=jd\+([^&]+).+ https://so.m.jd.com/ware/search.action?keyword=$1 302
# tb: 淘宝
^https:\/\/duckduckgo.com\/\?q=tb\+([^&]+).+ https://s.m.taobao.com/h5?q=$1 302
# tm: 天猫
^https:\/\/duckduckgo.com\/\?q=tm\+([^&]+).+ https://s.m.tmall.com/m/search.htm?q=$1 302

# ＞视频资源
# ac (Acfun)
^https:\/\/duckduckgo.com\/\?q=ac\+([^&]+).+ https://www.acfun.cn/search?keyword==$1 302
# bli (哔哩哔哩) 
^https:\/\/duckduckgo.com\/\?q=bli\+([^&]+).+ https://m.bilibili.com/search?keyword=$1 302
# ytb  (YouTube)
^https:\/\/duckduckgo.com\/\?q=ytb\+([^&]+).+ https://www.youtube.com/results?search_query=$1 302
# ph  (PornHub) 
^https:\/\/duckduckgo.com\/\?q=ph\+([^&]+).+ https://cn.pornhub.com/video/search?search=$1 302

# ＞网盘
# gd  (Google Drive)
^https:\/\/duckduckgo.com\/\?q=gd\+([^&]+).+ https://www.google.com/search?q=%22Google+Drive%22+$1 302
# tgd  (t.me/gdurl 搜索 Google Drive 资源)
^https:\/\/duckduckgo.com\/\?q=tgd\+([^&]+).+ https://t.me/s/gdurl?q=$1 302
# zgd  (https://zhao.pp.ua 搜索 Google Drive 资源)
^https:\/\/duckduckgo.com\/\?q=zgd(\+|%20)([^&]+).+ https://zhao.pp.ua/?q=$2 302

# ＞默认搜索
# bi: 必应
^https:\/\/duckduckgo.com\/\?q=bi\+([^&]+).+ https://cn.bing.com/search?q=$1 302
# bd: 百度
^https:\/\/duckduckgo.com\/\?q=bd\+([^&]+).+ https://www.baidu.com/s?wd=$1 302
# ddg: DuckDuckGo 
^https:\/\/duckduckgo.com\/\?q=ddg\+([^&]+).+ https://duckduckgo.com/?ia=about&q=$1 302
# 无指令: 谷歌
^https:\/\/duckduckgo.com\/\?q=([^&]+).+ https://www.google.com/search?q=$1 302




[Script]
# BoxJs安装脚本。
# Sub-Store

[MITM]
enable = false
#ca-passphrase =
#ca-p12 =
# Shadowrocket打开HTTPS解密方法：
# 1.点击配置文件后面ⓘ - HTTPS解密 - 证书 - 生成新的CA证书 - 安装证书。
# 2.手机设置 - 已下载描述文件 - 安装。
# 3.手机设置 - 通用 - 关于本机 - 证书信任设置 - 开启对应Shadowrocket证书信任。
# ----------
# Shadowrocket仅会解密hostname指定的域名的请求，可以使用通配符。也可以使用前缀 - 排除特定主机名，如 -*.example.com。iOS系统和某些应用有严格的安全策略，仅信任某些特定的证书，对这些域名启动解密可能导致问题，如 *.apple.com，*.icloud.com。
hostname = *.google.cn,*.googlevideo.com,duckduckgo.com